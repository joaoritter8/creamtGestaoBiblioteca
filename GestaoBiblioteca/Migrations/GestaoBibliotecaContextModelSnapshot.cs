// <auto-generated />
using System;
using GestaoBiblioteca.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoBiblioteca.Migrations
{
    [DbContext(typeof(GestaoBibliotecaContext))]
    partial class GestaoBibliotecaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SolucaoCrea.Models.Movimentacao", b =>
                {
                    b.Property<int>("MovimentacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimentacaoID"), 1L, 1);

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataMaxima")
                        .HasColumnType("datetime2");

                    b.Property<int>("LivroID")
                        .HasColumnType("int");

                    b.Property<string>("MovimentacaoStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PessoaID")
                        .HasColumnType("int");

                    b.Property<int>("ProfID")
                        .HasColumnType("int");

                    b.HasKey("MovimentacaoID");

                    b.HasIndex("LivroID");

                    b.HasIndex("PessoaID");

                    b.ToTable("Movimentacao");
                });

            modelBuilder.Entity("TesteBiblioteca.Models.Categoria", b =>
                {
                    b.Property<int>("CatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatID"), 1L, 1);

                    b.Property<string>("CatNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CatStatus")
                        .HasColumnType("bit");

                    b.HasKey("CatID");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("TesteBiblioteca.Models.Livro", b =>
                {
                    b.Property<int>("LivroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LivroID"), 1L, 1);

                    b.Property<int>("CatID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LivroAno")
                        .HasColumnType("datetime2");

                    b.Property<string>("LivroEdicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivroEditora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivroISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivroStatus")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("LivroTitulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PessoaID")
                        .HasColumnType("int");

                    b.HasKey("LivroID");

                    b.HasIndex("CatID");

                    b.HasIndex("PessoaID");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("TesteBiblioteca.Models.Pessoa", b =>
                {
                    b.Property<int>("PessoaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PessoaID"), 1L, 1);

                    b.Property<string>("PessoaCPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PessoaEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PessoaEndereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PessoaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PessoaRG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PessoaStatus")
                        .HasColumnType("bit");

                    b.Property<string>("PessoaTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PessoaTipo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("PessoaID");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("SolucaoCrea.Models.Movimentacao", b =>
                {
                    b.HasOne("TesteBiblioteca.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteBiblioteca.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("TesteBiblioteca.Models.Livro", b =>
                {
                    b.HasOne("TesteBiblioteca.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteBiblioteca.Models.Pessoa", "Autor")
                        .WithMany()
                        .HasForeignKey("PessoaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
